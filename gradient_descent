import numpy as np
points = [(np.array([1,0,1]),2),(np.array([1,1,0]),-3),(np.array([2,1,3]),5),(np.array([1,2,1]),-4),(np.array([0,1,2]),1),(np.array([0,0,1]),3)]
def F(w):
    return sum((w.dot(x)-y)**2 for x,y in points)/len(points)

def dF(w):
    return sum(2*(w.dot(x)-y)*x for x,y in points)/len(points)
    
def gradientDescent(F,dF):
    w=np.zeros(3)
    step=0.01
    for i in range(1000):
     value=F(w)
     gradient=dF(w)
     w=w-step*gradient
     print(w)

gradientDescent(F,dF)
